<#+
    public class SpringTemplate: CSharpTemplate {
        private IList<string> addedClassNames;
        private IEnumerable<Type> types;

        public SpringTemplate(IList<string> addedClassNames, IEnumerable<Type> types){
            this.addedClassNames = addedClassNames;
            this.types = types;
        }

        public override string TransformText(){
#>
<?xml version="1.0" encoding="utf-8" ?>

<!-- This file is generated by T4, DO NOT MODIFY! -->
<!-- <#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #> -->

<objects xmlns="http://www.springframework.net">

<#+
    foreach (var type in this.types) {
        var typeName = type.Name.ToLower();
#>
  <object id="<#= typeName #>" type="<#= type.FullName #>, <#= type.Assembly.GetName().Name #>"<#= typeName.EndsWith("controller") ? " singleton=\"false\"" : string.Empty #>>
<#+
    foreach (var property in type.GetProperties(BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)) {
        var propertyName = property.Name.ToLower();
        if (addedClassNames.Contains(propertyName)) {
#>
    <property name="<#= property.Name #>" ref="<#= propertyName#>"/>
<#+
        }
    }
#>
  </object>

<#+ } #>
</objects>
<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>